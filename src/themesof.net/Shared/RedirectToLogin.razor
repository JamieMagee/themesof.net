@inject NavigationManager Navigation

@code
{
    [CascadingParameter]
    private Task<AuthenticationState> AuthenticationStateTask { get; set; } = null!;

    protected override async Task OnInitializedAsync()
    {
        var authenticationState = await AuthenticationStateTask;

        if (authenticationState?.User?.Identity?.IsAuthenticated != true)
        {
            var returnUrl = Navigation.ToBaseRelativePath(Navigation.Uri);

            if (string.IsNullOrWhiteSpace(returnUrl))
                Navigation.NavigateTo("/signin", true);
            else
                Navigation.NavigateTo($"/signin?returnUrl={returnUrl}", true);
        }
    }
}